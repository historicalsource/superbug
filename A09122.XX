	.TITLE	CTYSUP
	.ASECT
OPT	=2
;OPT 0=WRWRD, OPT 1=PC DEV, OPT 2=PC ALONE
	.IF	EQ,OPT
	.=30000
PLFDRM	=004000
MAP	=10000
SPCTBL	=11000
CELTBL	=20000
ROM1	=20000
ROM2	=30000
ROM3	=34000
ROM4	=40000
CHKSM	=37765
	.ENDC
	.IF	GE,OPT-1
	.=10000
PLFDRM	=02400
MAP	=04000
SPCTBL	=05000
CELTBL	=06000
ROM1	=04000
ROM2	=10000
ROM3	=14000
ROM4	=20000
CHKSM	=17765
.ENDC
CRSHIN	=001006		;BIT 7 TRUE = CRASH
CRSHRS	=000500		;WRITE TO CLEAR CRASH LATCH
STRFLG	=001002		;BIT 7 FALSE = STEER
STRRST	=000640
SKIDIN	=001006
SKDRST	=000540
TMEOPT	=001101
GEAR32	=001000
GEAR1	=001001
GASIN	=001001
COIN1	=001003
COIN2	=001004
CARROT	=000600
PVP	=000400
PHP	=000440
WTCHDG	=000700
ARROFF	=000740
MOTSND	=001200
CSHSND	=001240
SKDSND	=001300
SLAMSW	=001007
SCRRST	=001003
ATRCT	=142
LTOFF	=142
SRTLMP	=143
NOATRC	=141
CNMASK	=001
PROT	=064645
STRTSW	=001005
TKSEL	=001007
TSTSW	=001005
TNEOUT	=001040
COINOP	=001100
XPOPT	=001102
MESOPT	=001103
LOC0	=002000
LOC1	=002020
ANADD	=002000
PRTCD	=012
HISCR	=014
ZERO	=015
CN1RDY	=016
CN2RDY	=017
ADDSAV	=020
TNETME	=022
VELN	=023
NTEMP	=024
TKSLDB	=026
TKFG	=027		;(2) SAVE AREA FOR LATCHED OUTPUTS
RANOBJ	=031		;RANDOM SPECIAL OBJ FOR ATTRACT
RANDOM	=032		;(2) RANDOM NUMBER
SPECN	=034		;MSB OF ADDRESS OF SELECTED MAPS SPECIAL TABLE
MAPN	=035		;MSB OF ADDRESS OF SELECTED MAP
XTDSCR	=036
SCRCNT	=037
MODE	=040		;0=GAME, 1=EXT. PLAY, 2=ATT
COST	=041
CN1DB	=042
CN2DB	=043
COINCT	=044
FUEL	=046
FUELTM	=047
SCOREA	=052
CLIDLO	=057
HCRPOS	=060
VCRPOS	=061
CELLX	=062
SPCLOC	=063
SPECCD	=064
SPCOBJ	=065
FRMCNT	=066			;(2)
MOLPNT	=070			;(2)
TEMP	=072			;(2)
HPOS	=074			;(2)
VPOS	=076			;(2)
ROTREG	=100
VEL	=101
VELX	=102
VELY	=103
CELLOC	=104
CELLID	=105
HPNT	=106
VPNT	=107
HPOSM	=111		;(2)
VPOSM	=113		;(2)
DIRPIC	=114
DIREC	=115
PVPOUT	=116
PHPOUT	=117
GEAR	=120
STRSAV	=121
SAVE	=122			;(2)
MPOS	=124
ROTOUT	=125
ROTPIC	=126
CELLX	=127
VOUT	=130			;(16)
HOUT	=150			;(16)
MOLXV	=170
MOLXH	=171
CRSLIN	=172
CRSHSV	=173
CRSCNT	=174
HPFAC	=175
VPFAC	=176
CELROT	=177
	.MACRO	.MSG,STRING
	.IRPC	..1,STRING
	.IF	LT,''..1-100
	.IFT
	.BYTE	''..1-60
	.IFF
	.BYTE	''..1-67
	.ENDC
	.ENDM
	.ENDM
	.SBTTL	POWER ON
	.IF	LE,OPT-1
	.IFT
PWRON:	LDX	I,NMI
	STX	E,173641
	LDX	I,IRQ
	STX	E,173644
	LDS	I,377
	SEI
	.IFF
PWRON:	LDS	I,377
	.ENDC
	LDX	I,177
	CLRA
P1:	STAA	X,0
	DEX
	BNE	P1
	LDAA	I,02
	STAA	D,MODE
	JSR	E,INIT
	.SBTTL	ATTRACT MODE
ATTRAC:	JSR	E,SETUP
	LDX	I,PROT		;A "RANDOM" NUMBER TO SHOW WE'RE OK
	STX	D,PRTCD
	LDAA	E,TSTSW
	RORA
	BCC	1$
	SEI
	JMP	TEST
1$:	LDAA	D,HPOS
	ASLA
	ASLA
	ASLA
	ASLA
	LDAB	D,HPOS+1
	LSRB
	LSRB
	LSRB
	LSRB
	ABA
	SUBA	I,04
	STAA	D,PHPOUT
	LDAA	I,010
	STAA	D,PVPOUT
	LDAA	I,02
	STAA	D,MODE
	STAA	D,TKFG
	CLRA
	STAA	D,VPOS
	STAA	D,VPOSM
	STAA	D,SPECN
	STAA	D,FRMCNT+1
	STAA	D,MOLXV
	STAA	E,MOTSND
	LDAA	I,RANOBJ
	STAA	D,CELLOC
	LDX	D,TKFG
	STAA	X,ATRCT
	JSR	E,OPTN
	LDAA	D,PHPOUT
	ADDA	I,02
	STAA	D,PHPOUT
	LDAA	D,HPOS+1		;INCREMENT LOCATION
	ADDA	I,040
	STAA	D,HPOS+1
	BCC	AT2
	LDAA	I,201
	STAA	D,MOLXH
	LDAA	D,HPOS
	INCA
	STAA	D,HPOS
	ADDA	I,017
	STAA	D,HPNT
	ANDA	I,017
	STAA	D,HPOSM
	STAA	D,HPFAC
	BNE	AT1
	JSR	E,RANNUM			;RANDOM NUMBER IN A
	ANDA	I,017
	STAA	D,TEMP+1
	LDAA	I,ATTMAP/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,ATTMAP&377			;C(A)=RANDOM CELL
	STAA	D,CELLID
	LDAA	D,RANDOM
	ANDA	I,007
	STAA	D,TEMP+1
	LDAA	I,ATTSPC/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,ATTSPC&377		;C(A)=LOW PART OF SPEC CODE
	LDAB	D,RANDOM+1
	ANDB	I,060			;ADD IN HIGH PART
	ABA
	STAA	D,RANOBJ
	CLR	E,CELLX
AT1:	LDAA	D,CELLID
	JSR	E,RCLIDM
	JSR	E,CONTH
AT2:	STAA	E,WTCHDG
	CLI
	WAI
AT3:	BRA	.-1
	.SBTTL	THE GAME
GAME:	CLR	E,MODE
	JSR	E,RERITE		;WRITE A FRESH ROAD
	JSR	E,INIT
	JSR	E,SETUP
	LDX	D,TKFG
	STAA	X,NOATRC
GO:	LDAA	D,MODE			;MAKE SURE WE SHOULD BE HERE
	CMPA	I,01
	BLS	STEER
	JMP	PWRON
STEER:	LDAA	D,ROTREG
	LDAB	E,STRFLG		;TEST FOR STEER
	BMI	S1			;NO STEER, GO TO PICTURE UPDATE
	STAB	D,STRSAV		;SAVE DIRECTION FOR SKID ROUTINE
	RORB				;C(CARRY)=DIRECTION FLAG
	LDAB	D,CRSCNT		;LOCKOUT STEERING DURING CRASH SEQUENCE
	BNE	S1
	LDAB	I,03
	BCC	RIGHT
LEFT:	NEGB
RIGHT:	ABA
S1:	STAA	D,ROTREG		;ADD IN STEER
	JSR	E,CNVRT
	STAA	D,ROTPIC
	STAA	D,TEMP+1
	LDAA	I,ROTTBL/400		;GET VIDEO CODE
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,ROTTBL&377
	STAA	D,ROTOUT		;LOAD ROTATION OUTPUT BUFFER
	STAA	E,STRRST		;RESET STEERING LATCH
CRASH:	LDAB	E,CRSHIN		;IN=0, DONE
	BPL	CREND
	LDAA	D,CRSHSV		;SV=0, CRASH
	BPL	CRSH
	LDAA	D,CRSCNT		;COUNT NOT=0, CRASH
	BEQ	CREND
CRSH:	CLRA				;STOP CAR
	STAA	D,VEL
	STAA	D,VELN
	LDAA	D,CRSCNT
	STAA	E,CSHSND		;OUTPUT CRASH SOUND
	ADDA	I,004			;INCREMENT CRASH SEQUENCE
	STAA	D,CRSCNT
	LDAB	I,013
	BITA	I,010
	BEQ	CR1
	NEGB
CR1:	ADDB	D,ROTREG
	STAB	D,ROTREG
	BITA	I,017
	BNE	CREND
	LDAB	D,TKFG+1
	EORB	I,004
	STAB	D,TKFG+1
	LDX	D,TKFG
	STAA	X,NOATRC
CREND:	LDAB	E,CRSHIN
	STAB	D,CRSHSV
	LDAA	D,VELN
	CMPA	I,065
	BLS	SKID
	STAA	E,CRSHRS		;RESET CRASH LATCH
SKID:	LDAA	D,FRMCNT
	ANDA	I,03
	BEQ	DIRECT
	LDAA	E,SKIDIN		;READ SKID LATCH
	STAA	E,SKDRST		;CLEAR LATCH
	RORA
	BCC	DIRECT			;IF NO SKID, GO TO NEXT ROUTINE
	STAA	E,SKDSND		;TURN ON SOUND
	LDAB	D,VEL		;AMOUNT OF SKID IS VEL/128+1
	ROLB
	ROLB
	ANDB	I,01
	INCB
	LDAA	D,STRSAV	;TEST LAST STEER DIRECTION
	RORA
	BCC	SK3		;IF LEFT, NEGATE SKID CONSTANT
	NEGB
SK3:	ADDB	D,ROTREG		;ADD SKID TO ROTATION
	STAB	D,ROTREG
DIRECT:	LDAA	D,VEL
	ROLA
	LDAA	I,03
	SBCA	I,0		;C(A)=3-(VEL/128)
	LDAB	D,ROTREG	;IF DIRECTION EQ. ROTATION, GO TO NEXT ROUTINE
	SUBB	D,DIREC
	BEQ	TONE
	BPL	DI2		;IF DIRECTION GT. ROTATION, NEGATE CONSTANTS
	NEGA
	NEGB
DI2:	CMPB	I,06		;SKID SOUND ON IF DIFFERENCE GT. 4
	BLS	DI4		;AND NOT IN A CRASH SEQUENCE
	TST	E,CRSCNT
	BNE	DI4
	STAB	E,SKDSND
DI4:	CMPB	I,02
	BHI	DI3
	LDAB	D,ROTREG
	STAB	D,DIREC
	BRA	TONE
DI3:	ADDA	D,DIREC		;UPDATE DIRECTION
	STAA	D,DIREC
TONE:	LDAB	D,TNETME	;EX PLAY TONE
	BEQ	SINCOS
	DECB
	STAB	D,TNETME
	BITB	I,03
	BNE	SINCOS
	STAB	E,TNEOUT
SINCOS:	LDAA	D,DIREC		;GET DIRECTION REGISTER & CONVERT TO PICTURE
	JSR	E,CNVRT
	LDAB	D,VEL
	STAA	D,DIRPIC
	BEQ	DIR0		;TEST FOR SPECIAL DIRECTIONS
	CMPA	I,06
	BEQ	DIR1
	CMPA	I,14
	BEQ	DIR0
	CMPA	I,22
	BEQ	DIR1
	STAA	D,TEMP+1	;GET SINE
	LDAA	I,DIRTBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,DIRTBL&377
	ASLA
	ASLA
	ASLA
	ASLA
	JSR	E,SINMUL	;B=(VEL)(SIN 0)
	STAB	D,VELX
	LDAB	D,VEL
	LDAA	X,DIRTBL&377	;GET COSINE
	ANDA	I,360
	JSR	E,SINMUL
	STAB	D,VELY
	BRA	VELSGN
DIR0:	LSRB			;SIDEWAYS
	LSRB
	LSRB
	STAB	D,VELY		;VELY=VEL/8
	CLR	E,VELX		;VELX=0
	BRA	VELSGN
DIR1:	LSRB			;UP-DOWN
	LSRB
	LSRB
	STAB	D,VELX		;VELX=VEL/8
	CLR	E,VELY		;VELY=0
VELSGN:	LDAA	D,DIRPIC	;IF PICTURE IS MORE THAN 12, VELX IS NEGATIVE
	CMPA	I,014
	BLS	D2
	NEG	E,VELX
D2:	NEG	E,VELY
	CMPA	I,006		;IF PICTURE BETWEEN 6 AND 18, VELY IS NEGATIVE
	BLS	SOUND
	CMPA	I,022
	BHI	SOUND
	NEG	E,VELY
SOUND:	LDAA	I,RPMTBL/400		;GET MULTIPLIER
	STAA	D,TEMP
	LDAA	D,GEAR
	LSRA
	LSRA
	LSRA
	LSRA
	LSRA
	STAA	D,TEMP+1
	LDX	D,TEMP
	LDAA	X,RPMTBL&377		;C(A)=MULTIPLIER
	LDAB	D,VELN
	LSRB
	LSRB
	LSRB
	STAB	D,TEMP
	CLRB
LOOP:	ADDB	D,TEMP			;MULTIPLY VEL/8 BY MULTIPLIER
	DECA
	BNE	LOOP
	ASRB				;DIVIDE BY 4
	ASRB
	CMPB	I,017			;OVERFLOW?
	BLS	RP1
	LDAB	I,017			;SOUND TO MAX
RP1:	STAB	E,MOTSND
ACCEL:	LDAA	D,FRMCNT		;ONLY DO EVERY FOURTH FRAME
	ANDA	I,03
	BNE	SCORE
	LDAA	I,140			;DETERMINE WHICH GEAR, THEN GO TO "GAS"
	LDAB	E,GEAR32
	BPL	SHIFT1
	LDAA	I,100
	BRA	GAS
SHIFT1:	RORB
	BCC	SHIFT2
	LDAA	I,40
	BRA	GAS
SHIFT2:	TST	E,GEAR1
	BPL	GAS
	LDAA	I,00
GAS:	STAA	D,GEAR
	LDAB	D,VELN
	CMPB	I,066			;IF IN CONTACT WITH AN OBJECT
	BLS	G2			;MAX VELOCITY IS 066
	TST	E,CRSHSV
	BPL	G2
	LDAA	I,377			;START DECELERATION
	BRA	G3
G2:	LSRB
	LSRB
	LSRB
	ABA				;A=0GGV VVVV
	STAA	D,TEMP+1
	LDAA	I,ACCTBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,ACCTBL&377		;C(A)=ACCELERATION-DECELERATION
	LDAB	E,GASIN
	ASRB			;C=GAS IN
	BCC	G1
	ASLA				;SIGN EXTEND FROM BIT 3
	ASLA
	ASLA
	ASLA
G1:	ASRA
	ASRA
	ASRA
	ASRA
G3:	ADDA	D,VEL
	STAA	D,VEL
	LDAB	D,TKFG+1
	BITB	I,010
	BNE	S2
	CMPA	I,010
	BLS	S2
	ADDA	I,030
S2:	STAA	D,VELN
SCORE:	LDAA	D,HCRPOS
	LDAB	D,VCRPOS
	ANDB	I,360
	LSRA
	LSRA
	LSRA
	LSRA
	ABA				;CELL THAT THE CAR IS IN
	STAA	D,TEMP+1
	LDAA	D,MAPN
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,MAP&377
	ROLA
	ROLA
	ROLA
	ANDA	I,03			;C(A)=CHECKPOINT CODE
	LDAB	D,SCRCNT
	CBA
	BNE	TIME
	INCB
	ANDB	I,03
	STAB	D,SCRCNT
	LDAA	D,SCOREA
	INCA				;INCREMENT SCORE BY 25
	DAA
	STAA	D,SCOREA
TIME:	DEC	E,FUELTM
	BNE	CRSPIC			;READY TO DECREMENT FUEL?
	LDAA	D,FUEL
	BNE	TM1
	LDAB	D,MODE
	BNE	TM2
	LDAB	D,XTDSCR
	BEQ	TM2
	CMPB	D,SCOREA		;COMPARE SCORE TO EXT. PLAY REQUIREMENT
	BHI	TM2
	ADDA	I,100			;SET FUEL TO 40
	STAA	D,FUEL
	LDAB	I,01			;SET MODE TO INDICATE EXTENDED PLAY
	STAB	D,MODE
	LDAB	I,137
	STAB	D,TNETME
	LDAB	D,TKFG+1
	EORB	I,004
	STAB	D,TKFG+1
	LDX	D,TKFG
	STAA	X,NOATRC
	BRA	TM1
TM2:	STAA	E,SKDRST
	CLRA
	STAA	D,TKFG+1
	STAA	D,MOLXV
	STAA	D,HPOS
	STAA	D,HPOS+1
	LDAA	I,14
	STAA	D,ROTOUT
	LDAA	D,SCOREA
	CMPA	D,HISCR
	BLS	1$
	STAA	D,HISCR
1$:	JSR	E,RERITE		;REWRITE SCREEN
	JMP	E,ATTRAC
TM1:	ADDA	I,231			;ADD 10'S COMPLIMENT OF -1
	DAA
	STAA	D,FUEL
	LDAA	E,TMEOPT		;GET TIME OPTION
	ANDA	I,03
	STAA	D,TEMP+1
	LDAA	I,TMETBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,TMETBL&377
	STAA	D,FUELTM
CRSPIC:	LDAA	D,CRSCNT		;NO CRASH MESSAGE IF 0
	BEQ	BLINK
	LDAB	I,200			;SET MOLECULE CROSSING
	STAB	D,MOLXH
	LSRA
	LSRA
	ANDA	I,03
	BEQ	CR2
	DECA
	STAA	D,CRSLIN
	ADDA	D,HPOS			;MOVE HPNT TO CENTER OF SCREEN
	ADDA	I,012
	STAA	D,HPNT
	TAB
	ANDA	I,017
	STAA	D,HPFAC
	LDAA	D,VPOS
	STAA	D,VPNT
	CLR	E,CELLX
	JSR	E,RCLLOC		;GET LINE
	JSR	E,NXTCLH
	LDAA	D,CRSCNT		;IF FINAL TINE,SKIP MESSAGE
	CMPA	I,357
	BHI	CR2
	LDAA	I,007			;FILL COUNTER
	STAA	D,SAVE
	CLR	E,TEMP
	LDAB	D,HPOS+1		;RANDOM NUMBER
	ANDB	I,03
	LDAA	D,VPNT			;FIND CENTER OF SCREEN
	ADDA	I,04
	ABA
	ANDA	I,017
	STAA	D,TEMP+1
	LDX	D,TEMP
	LDAB	D,CRSLIN		;GET LINE
	EORB	I,03			;**
	DECB
	STAB	D,SAVE+1
	ASLB				;MULTIPLY BY 8
	ASLB
	ASLB
	SUBB	D,SAVE+1		;SUBTRACT 1
	ADDB	I,232			;C(B)=353+7(LINE)
2$:	STAB	X,HOUT
	DEC	E,SAVE
	BEQ	CR2
	INCA
	ANDA	I,017
	STAA	D,TEMP+1
	LDX	D,TEMP
	INCB
	BRA	2$
CR2:	JMP	E,READY
BLINK:	LDAA	D,FRMCNT
	ANDA	I,007
	CMPA	I,005			;ON 6, OFF 2
	BLS	VUPDTE
	STAA	E,ARROFF
VUPDTE:	CLR	E,MOLXV
	LDAA	D,VPOS+1
	LDAB	D,VELY
	ASLB
	ADDB	D,VELY
	BEQ	JMP2			;IF NO VERT. MOTION, SKIP VERTICAL ROUTINES
	BPL	U1
	NEGB
	SBA
	STAA	D,VPOS+1
	BCC	VERT
	DEC	E,VPOS
	DEC	E,VCRPOS
	LDAA	I,200
	STAA	D,MOLXV
	BRA	VERT
U1:	ABA
	STAA	D,VPOS+1
	BCC	VERT
	INC	E,VPOS
	INC	E,VCRPOS
	LDAA	I,201
	STAA	D,MOLXV
VERT:	LDAA	D,VPOS		;FIGURE PVP
	ASLA
	ASLA
	ASLA
	ASLA
	LDAB	D,VPOS+1
	LSRB
	LSRB
	LSRB
	LSRB
	ABA
	STAA	D,PVPOUT
	ANDA	I,360
	LDAB	D,MOLXV
	BMI	V5
JMP2:	JMP	E,HUPDTE
V5:	RORB
	BCC	V2
	SUBA	I,020
V2:	STAA	D,VPFAC
	LDAA	D,VPOS
	LDAB	D,MOLXV
	RORB
	BCC	V1
	ADDA	I,017
V1:	STAA	D,VPNT
	LDAB	D,HPOS
	STAB	D,HPNT
	CLR	E,CELLX
	JSR	E,RCLLOC
NXTCLV:	JSR	E,RCELID
CONTV:	LDAB	D,CELLID
	BITB	I,040
	BEQ	R1B
	SEC
R1B:	BITB	I,020
	BEQ	ROT0B
	LDAB	D,HPOSM
	LDAA	D,VPOSM
	BCC	R6B
	COMA
	BRA	R4B
ROT0B:	LDAA	D,HPOSM
	LDAB	D,VPOSM
	BCC	R4B
	COMA
R6B:	COMB
R4B:	ASLB
	ASLB
	ASLB
	ASLB
	ANDA	I,017
	ABA
	STAA	D,MPOS
	LSRA
	LSRA
	ADDA	D,CLIDLO
	STAA	D,MOLPNT+1
	JSR	E,SPEC
	TSTA
	BNE	V4
	LDX	D,MOLPNT
	LDAA	X,0
	LDAB	D,MPOS		;DETERMINE WHICH TWO BITS
	ANDB	I,03
	CMPB	I,02
	BHI	X3B
	BEQ	X2B
	CMPB	I,01
	BEQ	X1B
	LSRA
	LSRA
X1B:	LSRA
	LSRA
X2B:	LSRA
	LSRA
X3B:	ANDA	I,03
	STAA	D,TEMP+1
	LDAA	I,XPDTBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,XPDTBL&377
V4:	LDX	D,HPOSM-1
	STAA	X,VOUT
	LDAB	D,HPOSM
	INCB
	ANDB	I,017
	STAB	D,HPOSM
	LDAA	D,HPOS
	ANDA	I,017
	CBA
	BEQ	HUPDTE
	TSTB
	BNE	CONTV
	INC	E,CELLOC
	LDAA	D,CELLOC
	ANDA	I,017
	BNE	V6
	LDAA	D,CELLOC
	SUBA	I,020
	STAA	D,CELLOC
V6:	JMP	E,NXTCLV
HUPDTE:	CLR	E,MOLXH
	LDAA	D,HPOS+1
	LDAB	D,VELX
	ASLB
	ADDB	D,VELX
	BEQ	JMP1		;IF VELX=0, NO HORIZ COMPUTATION NECESSARY
	BPL	U3
	NEGB
	SBA
	STAA	D,HPOS+1
	BCC	HORIZ
	DEC	E,HPOS
	DEC	E,HCRPOS
	LDAA	I,200
	STAA	D,MOLXH
	BRA	HORIZ
U3:	ABA
	STAA	D,HPOS+1
	BCC	HORIZ
	INC	E,HPOS
	INC	E,HCRPOS
	LDAA	I,201
	STAA	D,MOLXH
HORIZ:	LDAA	D,HPOS
	ASLA
	ASLA
	ASLA
	ASLA
	LDAB	D,HPOS+1
	LSRB
	LSRB
	LSRB
	LSRB
	ABA
	SUBA	I,04
	STAA	D,PHPOUT
	LDAA	D,HPOS
	LDAB	D,MOLXH
	BMI	H5
JMP1:	JMP	E,READY
H5:	RORB
	BCC	H1
	ADDA	I,017
H1:	STAA	D,HPNT
	TAB
	ANDA	I,017
	STAA	D,HPFAC
	LDAA	D,VPOS
	STAA	D,VPNT
	CLR	E,CELLX
	JSR	E,RCLLOC
	JSR	E,NXTCLH
READY:	LDAA	D,MODE
	CMPA	I,01
	BLS	1$
	JMP	PWRON
1$:	STAA	E,WTCHDG		;RESET WATCHDOG
	WAI
	JMP	E,GO
NXTCLH:	JSR	E,RCELID
CONTH:	LDAB	D,CELLID
	BITB	I,040
	BEQ	R1A
	SEC
R1A:	BITB	I,020
	BEQ	ROT0A
	LDAB	D,HPOSM
	LDAA	D,VPOSM
	BCC	R6A
	COMA
	BRA	R4A
ROT0A:	LDAA	D,HPOSM
	LDAB	D,VPOSM
	BCC	R4A
	COMA
R6A:	COMB
R4A:	ASLB
	ASLB
	ASLB
	ASLB
	ANDA	I,017
	ABA
	STAA	D,MPOS
	LSRA
	LSRA
	ADDA	D,CLIDLO
	STAA	D,MOLPNT+1
	JSR	E,SPEC
	TSTA
	BNE	H4
	LDX	D,MOLPNT
	LDAA	X,0
	LDAB	D,MPOS		;DETERMINE WHICH TWO BITS
	ANDB	I,03
	CMPB	I,02
	BHI	X3A
	BEQ	X2A
	CMPB	I,01
	BEQ	X1A
	LSRA
	LSRA
X1A:	LSRA
	LSRA
X2A:	LSRA
	LSRA
X3A:	ANDA	I,03
	STAA	D,TEMP+1
	LDAA	I,XPDTBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,XPDTBL&377
H4:	LDX	D,VPOSM-1
	STAA	X,HOUT
	LDAB	D,VPOSM
	INCB
	ANDB	I,017
	STAB	D,VPOSM
	LDAA	D,VPOS
	ANDA	I,017
	CBA
	BEQ	H6		;ALL 16 COMPUTED. . . FINISHED
	TSTB
	BNE	CONTH
	LDAA	D,CELLOC
	ADDA	I,020
	STAA	D,CELLOC
	JMP	E,NXTCLH
H6:	RTS
CNVRT:	CLRB
	STAA	D,TEMP
	ASLA			;MULTIPLY BY 3
	ADCB	I,0
	ADDA	D,TEMP
	ADCB	I,0
	ASRB			;DIVIDE BY 32
	RORA
	ASRB
	RORA
	LSRA
	LSRA
	LSRA
	RTS
SINMUL:	STAB	D,TEMP		;MULTIPLICAND TO B
	CLRB			;CLEAR PRODUCT
	STAB	D,TEMP+1	;CLEAR FLAG
SIN3:	TSTA			;TEST MULTIPLIER
	BPL	SIN1
	ADDB	D,TEMP
	BCC	SIN1
	INC	E,TEMP+1	;IF CARRY, SET FLAG
SIN1:	ASLA
	BEQ	SIN2
	LSR	E,TEMP
	BRA	SIN3
SIN2:	TST	E,TEMP+1
	BEQ	SIN4
	SEC
SIN4:	RORB			;DIVIDE BY 16
	LSRB
	LSRB
	LSRB
	RTS
RCLLOC:	ANDA	I,360		;C(A)=VPNT
	LSRB			;C(B)=HPNT
	LSRB
	LSRB
	LSRB
	ABA			;LOCATION OF POINTER IN
	STAA	D,CELLOC	;MAP, CELL ADDRESS
	LDAA	D,HPNT
	ANDA	I,017
	STAA	D,HPOSM
	LDAB	D,VPNT
	ANDB	I,017
	STAB	D,VPOSM
	RTS
RCELID:	LDAA	D,CELLOC	;GET ID OF CELL
	STAA	D,TEMP+1	;BEING POINTED TO
	LDAB	D,MAPN		
	STAB	D,TEMP		
	LDX	D,TEMP
	LDAA	X,0
	STAA	D,CELLID
RCLIDM:	CLRB
	RORA			;SAVE TWO LSB FOR LATER
	RORB
	RORA
	RORB
	STAB	D,CLIDLO
	TAB
	ANDB	I,03		;BUILD POINTER FOR CELL TABLE MSB
	ADDB	I,CELTBL/400
	STAB	D,MOLPNT
	LSRA
	LSRA
	ANDA	I,03		;GET CELL ROTATION
	STAA	D,CELROT	
	DEC	E,CELLX		;SET CELL CROSSING POINTER
	CLC				;CLEAR C FOR ROTATION ROUTINE
	RTS
SPEC:	LDAA	D,CELLX
	BEQ	SPGO
	LDAA	D,SPECN		;SET UP X TO GET SPCTBL+CELLOC
	STAA	D,TEMP
	LDAA	D,CELLOC
	STAA	D,TEMP+1
	LDX	D,TEMP
	LDAA	X,0			;C(A)=LLCC 0000
	STAA	D,SPECCD		;SAVE CODE
	BEQ	SPEND
	LDAB	I,LOCTBL/400		;GET LOCATION
	STAB	D,TEMP
	LDAB	D,CELLID
	ANDB	I,017
	SUBB	I,04			;NO SPECIALS IN CELLS 0,1,2, OR 3
	BMI	SPEND
	ASLB
	ASLB				;C(B)=4(CELL-4)
	ROLA
	ROLA
	ROLA
	ANDA	I,03
	ABA
	STAA	D,TEMP+1
	LDX	D,TEMP
	LDAB	X,LOCTBL&377		;C(B)=SPECIAL LOCATION
	STAB	D,SPCLOC
	LDAA	I,SPCXPD/400
	STAA	D,TEMP
	LDAA	D,SPECCD
	ANDA	I,017		;C(A)=OBJECT CODE

	STAA	D,TEMP+1
	LDX	D,TEMP
	LDAA	D,SPECCD
	ASLA
	ASLA
	ANDA	I,300			;C(A)=COLOR CODE
	ADDA	X,SPCXPD&377		;C(A)=SPECIAL OBJECT
	STAA	D,SPCOBJ
SPGO:	LDAA	D,SPECCD		;C(SAVE)=CODE FROM SPECIAL TABLE
	BEQ	SPEND
	LDAB	D,SPCLOC
	ANDA	I,017
	CMPA	I,003			;TEST FOR BIG OBJECTS
	BLS	BIGOBJ
	LDAA	D,SPCOBJ
	CMPB	D,MPOS
	BEQ	SPDONE
	BRA	SPEND
BIGOBJ:	LDAA	D,CELROT		;ISOLATE ROTATION
	ADDA	D,SPCOBJ		;ADD IN OBJECT CODE
	CMPB	D,MPOS
	BEQ	SPDONE
	DECB
	INCA
	BITA	I,03
	BNE	SP1
	SUBA	I,04
SP1:	CMPB	D,MPOS
	BEQ	SPDONE
	SUBB	I,020
	INCA
	BITA	I,03
	BNE	SP2
	SUBA	I,04
SP2:	CMPB	D,MPOS
	BEQ	SPDONE
	INCB
	INCA
	BITA	I,03
	BNE	SP3
	SUBA	I,04
SP3:	CMPB	D,MPOS
	BEQ	SPDONE
SPEND:	CLRA
SPDONE:	CLR	E,CELLX
	RTS
RANNUM:	LDAB	I,04
	LDAA	D,RANDOM+1
RN1:	RORA
	RORA
	RORA
	EORA	D,RANDOM
	ROLA
	ROR	E,RANDOM
	LDAA	D,RANDOM+1
	RORA
	STAA	D,RANDOM+1
	DECB
	BNE	RN1
	TSTA				;CHECK FOR ILLEGAL NUMBER
	BNE	RN2
	TST	E,RANDOM
	BNE	RN2
	COM	E,RANDOM
RN2:	RTS
	.SBTTL	VARIABLE INITIALIZATION
INIT:	LDAA	I,MAP/400		;MAP 1
	LDAB	I,SPCTBL/400
	TST	E,TKFG+1
	BEQ	.+4
	INCA
	INCB
	STAA	D,MAPN			;STORE MAP CHOSEN
	STAB	D,SPECN
	LDAB	I,STRTBL/400
	STAB	D,TEMP
	LDAB	D,RANDOM		;GET A RANDOM NUMBER
	ANDB	I,007
	ORAB	D,TKFG+1
	STAB	D,TEMP+1
	LDX	D,TEMP
	LDAB	X,STRTBL&377
	TBA
	ANDB	I,360
	STAB	D,VPOS
	ADDB	I,010
	STAB	D,VCRPOS
	ASLA
	ASLA
	ASLA
	ASLA
	STAA	D,HPOS
	ADDA	I,010
	STAA	D,HCRPOS
	LDAA	I,220
	STAA	D,FUEL
	LDAA	I,010
	STAA	D,PVPOUT
	LDAA	I,200
	STAA	D,VPOS+1
	CLRA
	STAA	D,VEL
	STAA	D,CRSCNT
	STAA	D,SCOREA
	STAA	D,SCRCNT
	STAA	D,MOLXH
	STAA	D,MOLXV
	STAA	D,VELN
	STAA	D,HPOS+1
	STAA	D,HPOSM-1
	STAA	D,VPOSM-1
	STAA	E,CRSHRS
	STAA	E,SKDRST
	STAA	E,MOTSND
	STAA	E,STRRST
	SUBA	I,04
	STAA	D,PHPOUT
	STAA	E,CSHSND
OPTN:	LDAA	E,COINOP		;READ COIN. OPTION SWITCH
	ANDA	I,03			;COST IS THE SAME AS SWITCH UNLESS EQUAL TO 3
	CMPA	I,03
	BNE	CN70
	INCA
CN70:	STAA	D,COST
	LDAA	E,TMEOPT
	ANDA	I,03
	STAA	D,TEMP+1
	LDAA	I,TMETBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,TMETBL&377
	STAA	D,FUELTM
	LDAA	E,XPOPT			;READ EXTENDED PLAY OPTION SWITCH
	ANDA	I,03
	ASLA
	ASLA				;C(A)=4(XPOPT)
	LDAB	E,TMEOPT		;READ TIME OPTION SWITCH
	ANDB	I,03
	ABA				;C(A)=4(XPOPT)+TMEOPT
	STAA	D,TEMP+1
	LDAA	I,XPLTBL/400
	STAA	D,TEMP
	LDX	D,TEMP
	LDAA	X,XPLTBL&377
	STAA	D,XTDSCR
	RTS
	.SBTTL	WRITE SCREEN
SETUP:	LDAA	I,100
	STAA	D,ROTREG
	STAA	D,DIREC
	LDAA	I,06
	STAA	D,ROTPIC
	LDAA	I,14
	STAA	D,ROTOUT
	RTS
RERITE:	LDAB	I,017			;START LINE COUNT
1$:	STAB	D,HPOSM
	STAB	D,HPFAC
	CLRA
	STAA	D,ZERO
	STAA	D,SPECN
	STAA	D,CELLX
	STAA	D,VPOS
	STAA	D,VPOSM
	LDAA	I,374
	STAA	D,PHPOUT
	LDAA	I,ZERO
	STAA	D,CELLOC
	LDAA	I,201
	STAA	D,MOLXH
	LDAA	I,24
	STAA	D,CELLID
	PSHB
	JSR	E,RCLIDM		;BUILD LINE
	JSR	E,CONTH
	PULB
	STAA	E,WTCHDG
	WAI
	DECB
	BPL	1$
	RTS
IRQ:	LDAA	D,MODE			;VERIFY ATTRACT
	CMPA	I,02
	BEQ	8$
9$:	RTI
8$:	LDX	D,PRTCD			;VERIFICATION
	CPX	I,PROT
	BEQ	10$
	JMP	PWRON
10$:	ROR	E,SLAMSW		;LOOK FOR SLAM (B0=1)
	BCS	9$
	LDAB	D,COINCT
	ANDB	I,017			;PROTECT AGAINST A BLITZ
	TST	E,COIN1			;CHECK COIN AND CLEAR CARRY
	BMI	1$
	SEC
1$:	LDAA	D,CN1DB			;ROTATE REGISTER
	RORA
	STAA	D,CN1DB
	CMPA	I,377			;NO COIN FOR 16 MS.
	BNE	2$
	STAA	D,CN1RDY		;SET READY FLAG
2$:	CMPA	I,CNMASK		;CHECK FOR COIN MATCH
	BNE	3$
	LDAA	D,CN1RDY		;CHECK FOR READY FLAG
	BPL	3$
	ADDB	I,002			;GIVE CREDIT
	CLR	E,CN1RDY		;CLEAR READY
3$:	TST	E,COIN2
	BMI	4$
	SEC
4$:	LDAA	D,CN2DB
	RORA
	STAA	D,CN2DB
	CMPA	I,377
	BNE	5$
	STAA	CN2RDY
5$:	CMPA	I,CNMASK
	BNE	6$
	LDAA	D,CN2RDY
	BPL	6$
	ADDB	I,002
	CLR	E,CN2RDY
6$:	LDAA	E,COIN1			;NO START CHECK IF EITHER COIN PRESENT
	ORAA	E,COIN2
	BMI	CN1
	LDX	D,TKFG
	STAA	X,LTOFF			;START LIGHT OFF
	CMPB	D,COST			;SUFFICIENT CREDIT?
	BMI	CN1
	TST	E,TKSEL			;TRACK CHANGE?
	BMI	.+3
	SEC
	LDAA	D,TKSLDB
	RORA
	STAA	D,TKSLDB
	CMPA	I,CNMASK
	BNE	.+10
	LDAA	I,010			;TOGGLE TRACK FLAG
	EORA	D,TKFG+1
	STAA	D,TKFG+1
	LDAA	E,SCRRST
	RORA
	BCC	7$
	CLR	E,HISCR
7$:	LDAA	I,020			;BLINK START LITE
	BITA	D,FRMCNT
	BEQ	.+4
	STAA	X,SRTLMP
	LDAA	E,STRTSW		;TEST START SWITCH
	BPL	CN1			;EXIT IRQ IF OPEN
	SUBB	D,COST
	BPL	.+5
	JMP	E,PWRON			;PROTECTION
	STAA	X,SRTLMP		;TURN ON START LAMP
	TSX				;SET PSW & ALTER RETURN ADDRESS
	LDAA	I,320
	STAA	X,00	
	LDAA	I,GAME/400
	STAA	X,05
	LDAA	I,GAME & 377
	STAA	X,06
CN1:	STAB	D,COINCT
	RTI
NMI:	LDX	D,PRTCD			;CHECK VERIFICATION
	CPX	I,PROT
	BNE	2$
	STS	D,SAVE
	LDAB	D,MODE
	CMPB	I,002
	BEQ	N7
	BLS	GMEOUT
2$:	ROR	E,TSTSW
	BCS	1$
	JMP	PWRON
1$:	TSX				;RESTORE X
	LDX	X,3
	STAA	X,0			;TEST MODE
	CLR	E,PVP
	CLR	E,PHP
	STAA	E,WTCHDG		;WHEN TESTING, RESET WATCHDOG NO MATTER WHAT
N5:	RTI
GMEOUT:	LDAA	D,MOLXV			;ANY MOLECULE CROSSING?
	BPL	N7			;NO? GO ON
	LDAA	I,PLFDRM/400		;BUILD ADDRESS
	STAA	D,NTEMP
	LDAB	I,020
	LDAA	D,VPFAC
	STAA	D,NTEMP+1
	LDS	I,VOUT-1
	LDX	D,NTEMP			;C(X)=(PLFD)+(PFP&F0)
N2:	PULA
	STAA	X,0
	INX
	DECB
	BNE	N2
N7:	LDAA	D,MOLXH			;ANY MOLECULE CROSSING
	BPL	MESS			;NO? GO ON
	LDAA	I,PLFDRM/400		;BUILD ADDRESS
	STAA	D,NTEMP
	LDAB	D,HPFAC
	STAB	D,NTEMP+1
	LDS	I,HOUT-1
N1:	LDX	D,NTEMP			;C(X)=(PFLD)+(PHP/10)
	PULA
	STAA	X,0
	ADDB	I,020
	STAB	D,NTEMP+1
	BCC	N1
	LDAA	D,MOLXH			;TEST. IF BOTH BOUNDARIES CROSSED,
	ANDA	D,MOLXV			;SAVE TIME & SKIP OTHER MESSAGE
	BMI	N3
MESS:	LDAA	D,FRMCNT		;4 POSSIBLE ROUTINES
	ANDA	I,01
	BNE	RTN4
	JMP	E,RTN5
OUTPUT:	STX	D,ADDSAV		;SAVE RETURN ADDRESS
	LDAA	E,MESOPT		;MESS=MES0+15(B+13(OPT))+14
	ANDA	I,03
	BEQ	1$
2$:	ADDB	I,015			;ADD 13(OPT)
	DECA
	BGT	2$
1$:	STAB	D,NTEMP
	ASLB				;MULT BY 15 (INTO A)
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	ASLB
	ROLA
	SUBB	D,NTEMP
	SBCA	I,00
	ADDB	I,016
	STAB	D,NTEMP+1
	ADCA	I,MES0/400
	STAA	D,NTEMP
	LDX	D,NTEMP
	LDAA	I,016
TRANS:	LDAB	X,MES0&377
	PSHB
	DEX
	DECA
	BPL	TRANS
2$:	LDX	D,ADDSAV		;GET RETURN ADDRESS
	JMP	X,0
N3:	LDS	D,SAVE
	LDAA	D,PHPOUT
	STAA	E,PHP
	LDAA	D,PVPOUT
	STAA	E,PVP
	LDAA	D,ROTOUT
	STAA	E,CARROT
	TSX				;IN ATTRACT, ALTER RETURN ADDRESS TO TOP OF ATTRACT
	LDX	X,05			;CHECK FOR CORRECT ENTRY
	CPX	I,AT3
	BNE	T2
	TSX
	LDAA	I,ATTRAC+3/400
	STAA	X,05
	LDAA	I,ATTRAC+3&377
	STAA	X,06
T2:	INC	E,FRMCNT
	BNE	I7
	INC	E,FRMCNT+1
I7:	RTI
RTN4:	LDAA	D,MODE
	BITA	I,02
	BEQ	1$
	LDAA	D,FRMCNT
	BMI	2$
	LDAB	D,COST
	ADDB	I,007
	LDS	I,LOC0+16
	LDX	I,N3
	JMP	OUTPUT
2$:	LDAB	I,00
	LDS	I,LOC0+16
	LDAA	D,XTDSCR
	BEQ	3$
	LDAB	I,012
	LDX	I,4$
	JMP	OUTPUT
4$:	LDAA D,XTDSCR
	LSRA
	LSRA
	LSRA
	LSRA
	BEQ	6$			;BLANK IF ZERO
	STAA	E,LOC0+13
6$:	LDAA	D,XTDSCR
	ANDA	I,017
	STAA	E,LOC0+14
	JMP	E,N3
1$:	LDAB	I,005
	LDS	I,LOC0+16
	LDX	I,5$
	JMP	OUTPUT
5$:	LDAA	D,FUEL
	ANDA	I,017
	STAA	E,LOC0+014
	LDAA	D,FUEL
	LSRA
	LSRA
	LSRA
	LSRA
	STAA	E,LOC0+013
	JMP	N3
3$:	LDX	I,N3			;ADDRESS AFTER OUTPUT
	JMP	OUTPUT
RTN5:	LDS	I,LOC1+16
	LDAB	I,006
	LDAA	D,MODE			;NO RATING DURING GAME
	BITA	I,02
	BEQ	3$
	LDAA	D,FRMCNT
	ROLA				;SKIP ON B6 EOR B7=0
	BVS	3$
	LDAA	D,FRMCNT
	BMI	1$
	LDAB	I,014
	LDX	I,4$
	JMP	OUTPUT
4$:	LDAA	D,HISCR
	ANDA	I,017
	STAA	E,LOC1+015
	LDAA	D,HISCR
	LSRA
	LSRA
	LSRA
	LSRA
	BEQ	5$			;BLANK IF ZERO
	STAA	E,LOC1+014
5$:	JMP	N3
1$:	LDAB	I,001
	LDAA	D,SCOREA
	CMPA	E,RATTBL
	BLS	2$
	INCB
	CMPA	E,RATTBL+1
	BLS	2$
	INCB
	CMPA	E,RATTBL+2
	BLS	2$
	INCB
2$:	LDX	I,N3
	JMP	OUTPUT
3$:	LDX	I,N9
	JMP	OUTPUT
N9:	LDAA	D,SCOREA
	ANDA	I,017
	STAA	E,LOC1+014
	LDAA	D,SCOREA
	LSRA
	LSRA
	LSRA
	LSRA
	BEQ	1$			;BLANK IF ZERO
	STAA	E,LOC1+013
1$:	JMP	N3
TEST:	LDAA	I,03			;TEST MODE
	STAA	D,MODE
	LDAB	I,02			;ALPHANUMERIC TEST . . . COUNT UP TWICE
	CLRA
TS0:	LDX	I,ANADD
TS1:	WAI				;LOAD RAM
	INX
	INCA
	BNE	TS1
	DECB				;DO IT AGAIN
	BNE	TS0
	LDAB	I,02			;NOW COUNT DOWN
TS18:	DECA
	LDX	I,ANADD
TS2:	WAI
	INX
	DECA
	BNE	TS2
	DECB
	BNE	TS18
	CLRA				;RAM TEST
	LDX	I,0000
TS4:	WAI
	CMPA	X,0			;SEE IF IT IS THERE
	BEQ	TS3
TS19:	LDAA	I,00			;IF RAM FAILS, WRITE "0" TO SCREEN
	STAA	E,LOC0
	BRA	TS5
TS3:	INX
	INCA
	BPL	TS4
	LDS	I,177			;PUT STACK IN BOTTOM & TEST TOP
1$:	WAI
	CMPA	X,0
	BNE	TS19
	INX
	INCA
	BNE	1$
TS5:	LDAB	I,02			;PLAYFIELD TEST
	CLRA				;COUNTING UP
TS7:	LDX	I,PLFDRM
TS6:	WAI
	INX
	INCA
	BNE	TS6
	DECB				;DO IT TWICE
	BNE	TS7
	LDAB	I,02			;NOW COUNT DOWN TWICE
TS9:	LDX	I,PLFDRM
TS8:	WAI
	INX
	DECA
	BNE	TS8
	DECB
	BNE	TS9
	LDX	I,ROM1			;ROM TEST
	CLRA
TS10:	ADDA	X,0			;COMPUTE SUM
	INX
	CPX	I,ROM2
	BNE	TS10
	ADDA	E,CHKSM
	BEQ	TS11			;IF ZERO, GO ON
	LDAA	I,001			;WRITE "1" IF ROM1 BAD
	LDX	I,LOC0+1
	WAI
TS11:	CLRA
	LDX	I,ROM2
TS12:	ADDA	X,0
	INX
	CPX	I,ROM3
	BNE	TS12
	ADDA	E,CHKSM+1
	BEQ	TS13
	LDAA	I,002			;WRITE "2" IF ROM2 BAD
	LDX	I,LOC0+2
	WAI
TS13:	CLRA
	LDX	I,ROM3
TS14:	ADDA	X,0
	INX
	CPX	I,ROM4
	BNE	TS14
	ADDA	E,CHKSM+2
	BEQ	TS15
	LDAA	I,003			;WRITE "3" IF ROM3 BAD
	LDX	I,LOC0+3
	WAI
TS15:	LDX	I,0000			;DUMMY ADDRESS FOR NMI
	STAA	E,001151		;START LAMP ON,ATTRACT OFF
	CLRA				;SWITCH TEST
	STAA	E,SKDRST		;TURN OFF SKID
	LDAA	E,GEAR32		;"OR" ALL SWITCHES
	ORAA	E,GEAR1
	ORAA	E,SLAMSW
	ORAA	E,SCRRST
	TAB				;ROTATE BIT 0
	RORB
	RORB
	STAB	D,TEMP
	ORAA	D,TEMP
	ORAA	E,COIN1
	ORAA	E,COIN2
	ORAA	E,STRTSW
	BPL	TS16
	STAA	E,SKDSND		;TURN ON SKID		
TS16:	LDAA	I,010			;STEERING TEST
	LDAB	E,STRFLG
	STAB	E,STRRST		;CLEAR FLAG
	BMI	TS17			;NO STEER
	LDAA	I,017
	RORB
	BCC	TS17
	CLRA
TS17:	STAA	E,MOTSND
	WAI
	BRA	TS15
ROTTBL:	.BYTE	20,21,22,23,16,15,14,05,06,33,32,31,30
	.BYTE	35,36,37,02,01,10,11,12,27,26,25
DIRTBL:	.BYTE	000,364,350,273,216,117,000,117,216,273,350,364,000
	.BYTE	364,350,273,216,117,000,117,216,273,350,364
XPDTBL:	.BYTE	010,331,230,010
ACCTBL:	.BYTE	007,367,366,345,323,302,261,240,220,237,237,237,236,236,236,235
	.BYTE	235,235,234,234,234,233,233,233,232,232,232,231,231,231,231,231
	.BYTE	001,301,261,261,301,322,324,326,326,326,305,263,241,220,220,220
	.BYTE	237,237,237,237,237,236,236,236,236,236,235,235,235,235,234,234
	.BYTE	001,241,221,221,221,221,221,221,221,241,261,301,322,323,324,325
	.BYTE	325,325,303,261,240,220,220,237,237,237,237,237,236,236,236,236
	.BYTE	001,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221
	.BYTE	241,261,301,302,303,303,303,303,303,303,303,303,303,303,303,300
XPLTBL:	.BYTE	000,000,000,000,011,024,031,044,020,026,042,047,022,030,044,060
TMETBL:	.BYTE	050,074,120,144
RPMTBL:	.BYTE	011,004,003,002
LOCTBL:	.BYTE	230,045,007,225,074,026,010,217,207,213,204,110,210,114,330,217
	.BYTE	252,074,017,204,106,345,370,033,170,106,113,233,367,355,010,103
	.BYTE	021,345,270,146,253,166,250,017,210,247,106,132,210,232,107,164
SPCXPD:	.BYTE	000,020,024,004,000,000,000,000,012,013,014,015,016,017,010,011
STRTBL:	.BYTE	127,201,243,325,342,037,370,127,252,300,052,227,252,214,314,300
;
;LETTER CROSS-REFERENCE
;A-A	G-G	P-M	X-S
;B-B	I-H	R-N	Y-T
;C-C	J-I	S-O	Z-U
;D-D	L-J	T-P	 -V
;E-E	M-K	U-Q	O-0
;F-F	N-L	.-R
;
MES0:   .MSG	VVVVVVVVVVVVVVV		;BLANK
	.MSG	VVVVVO0NNTVVVVV		;SORRY
	.MSG	VVVVVO0VO0VVVVV		;SO-SO
	.MSG	VVVVVG00DVVVVVV		;GOOD
	.MSG	VVVVVVACEVVVVVV		;ACE
	.MSG	VVFQEJVVVVVVVVV		;FUEL
	.MSG	VVOC0NEVVVVVV0V		;SCORE
	.MSG	VVVFNEEVMJATVVV		;FREE PLAY
	.MSG	1VC0HLVV2VMJATO		;1 COIN/2 PLAY
	.MSG	V1VC0HLV1VMJATV		;1 COIN/1 PLAY
	.MSG	VB0LQOVF0NVVV0V		;BONUS FOR
	.MSG	2VC0HLOVV1VMJAT		;2 COIN/PLAY
	.MSG	VP0MVOC0NEVVVV0		;TOP SCORE
FRENCH:	.MSG	VVVVVVVVVVVVVVV		;BLANK
	.MSG	VVVVDEO0JEVVVVV		;SORRY
	.MSG	VVVMAOOABJEVVVV		;SO-SO
	.MSG	VVVVVBHELVVVVVV		;GOOD
	.MSG	VVVVVVAOVVVVVVV		;ACE
	.MSG	VVEOOELCEVVVVVV		;FUEL
	.MSG	VVOC0NEVVVVVV0V		;SCORE
	.MSG	MANPHEVGNAPQHPE		;FREE PLAY
	.MSG	1VMHECEVV2VIEQS		;1 COIN/2 PLAY
	.MSG	V1VMHECEV1VIEQV		;1 COIN/PLAY
	.MSG	B0LQOVM0QNVVV0V		;BONUS
	.MSG	2VMHECEOVV1VIEQ		;2 COIN/PLAY
	.MSG	VOC0NEVKASRVVV0		;MAX SCORE
SPANISH: .MSG	VVVVVVVVVVVVVVV		;BLANK
	.MSG	VVVJ0VOHELP0VVV		;SORRY
	.MSG	VVVVAOHVAOHVVVV		;SO-SO
	.MSG	VVVVVBQEL0VVVVV		;GOOD
	.MSG	VVVVVVAOVVVVVVV		;ACE
	.MSG	VVGAOVVVVVVVVVV		;FUEL
	.MSG	NEOQJPAD0OVVV0V		;SCORE
	.MSG	VIQGADAVGNAPHOV		;FREE PLAY
	.MSG	V1VKDARV2VIG0OR		;1 COIN/2 PLAY
	.MSG	V1VKDARV1VIG0RV		;1 COIN/PLAY
	.MSG	VB0L0OVM0NVVV0V		;BONUS
	.MSG	V2VKDAORV1VIG0R		;2 COIN/PLAY
	.MSG	VKASROC0NEVVVV0		;TOP SCORE
GERMAN:	.MSG	VVVVVVVVVVVVVVV		;BLANK
	.MSG	VVVVBEDAQNEVVVV		;SORRY
	.MSG	VVVVVO0VO0VVVVV		;SO-SO
	.MSG	VVVVVVGQPVVVVVV		;GOOD
	.MSG	VVVVVVAOVVVVVVV		;ACE
	.MSG	VVGAOVVVVVVVVVV		;FUEL
	.MSG	VVPNEFFENVVVV0V		;SCORE
	.MSG	VVFNEHEOVOMHEJV		;FREE PLAY
	.MSG	1VKQLUEV2VOMHEJ		;1 COIN/2 PLAY
	.MSG	1VKQLUEV1VOMHEJ		;1 COIN/PLAY
	.MSG	VB0LQOVFQNVVV0V		;BONUS
	.MSG	2VKQLUEV1VOMHEJ		;2 COIN/PLAY
	.MSG	P0MVPNEFFENVVV0		;TOP SCORE
RATTBL:	.BYTE	005,020,024
ATTMAP:	.BYTE	024,024,024,024,064,064,064,064,033,031,006,046,006,046,027,067
ATTSPC:	.BYTE	000,000,100,301,301,301,003,103
	FILL	=37764-.
	.IF	GE,OPT-1
	FILL	=17764-.
	.ENDC
	.REPT	FILL
	.BYTE	00
	.ENDR
SUMPAR: .BYTE	00			;MAKE CHECKSUM3 EVEN WITH 0 OR 1
	.BYTE	00,00,00
	.WORD	IRQ,PWRON,NMI,PWRON
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                         